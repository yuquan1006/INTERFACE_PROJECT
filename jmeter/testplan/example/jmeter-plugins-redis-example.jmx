<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0.20190614">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <me.yangqiuhua.jmeter.protocol.config.RedisElement guiclass="TestBeanGUI" testclass="me.yangqiuhua.jmeter.protocol.config.RedisElement" testname="RedisElement" enabled="true">
        <stringProp name="database">1</stringProp>
        <stringProp name="host">139.196.75.96</stringProp>
        <stringProp name="jedisPoolName">redis</stringProp>
        <stringProp name="maxIdle">8</stringProp>
        <stringProp name="maxTotal">8</stringProp>
        <stringProp name="maxWaitMillis">-1</stringProp>
        <stringProp name="minIdle">0</stringProp>
        <stringProp name="password">AdeTTT32312ttedsdcaHUHU</stringProp>
        <stringProp name="port">3333</stringProp>
        <stringProp name="timeout">60000</stringProp>
      </me.yangqiuhua.jmeter.protocol.config.RedisElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="redis op" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="redis set" enabled="true">
            <stringProp name="BeanShellSampler.query">import redis.clients.jedis.Jedis;
import me.yangqiuhua.jmeter.protocol.config.RedisElement;

	String redisPoolName = &quot;redis&quot;;
	Jedis jedis = RedisElement.getJedis(redisPoolName);

	String redisKey = &quot;string&quot;;
	log.info(&quot;redisKey：{}&quot;,redisKey);
	
	String redisValue = &quot;test&quot;;
	log.info(&quot;redisValue：{}&quot;,redisValue);

	jedis.set(redisKey, redisValue);

	String responseData = &quot;redisKey：&quot; + redisKey + &quot;\r\n&quot; 
	+ &quot;redisValue：&quot; + redisValue;

SampleResult.setResponseData(responseData, &quot;utf-8&quot;); </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="redis get" enabled="true">
            <stringProp name="BeanShellSampler.query">import redis.clients.jedis.Jedis;
import me.yangqiuhua.jmeter.protocol.config.RedisElement;

	String redisPoolName = &quot;redis&quot;;
	Jedis jedis = RedisElement.getJedis(redisPoolName);

	String redisKey = &quot;string&quot;;
	log.info(&quot;redisKey：{}&quot;,redisKey);
	
	String redisValue = jedis.get(redisKey);
	log.info(&quot;redisValue：{}&quot;,redisValue);

	String responseData = &quot;redisKey：&quot; + redisKey + &quot;\r\n&quot; 
	+ &quot;redisValue：&quot; + redisValue;

SampleResult.setResponseData(responseData, &quot;utf-8&quot;); </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="redis hset" enabled="true">
            <stringProp name="BeanShellSampler.query">import redis.clients.jedis.Jedis;
import me.yangqiuhua.jmeter.protocol.config.RedisElement;

	String redisPoolName = &quot;redis&quot;;
	Jedis jedis = RedisElement.getJedis(redisPoolName);

	String redisKey = &quot;hash&quot;;
	log.info(&quot;redisKey：{}&quot;,redisKey);

	jedis.hset(redisKey,&quot;name&quot;,&quot;yangqiuhua&quot;);
     jedis.hset(redisKey,&quot;age&quot;,&quot;18&quot;);

	String responseData = &quot;hset redisKey：&quot; + redisKey + &quot; success&quot;;

SampleResult.setResponseData(responseData, &quot;utf-8&quot;); </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="redis hgetAll" enabled="true">
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import me.yangqiuhua.jmeter.protocol.config.RedisElement;

import redis.clients.jedis.Jedis;

import java.util.Map;

	String redisPoolName = &quot;redis&quot;;
	Jedis jedis = RedisElement.getJedis(redisPoolName);
	
	String redisKey = &quot;hash&quot;;
	log.info(&quot;redisKey：{}&quot;,redisKey);
	
	Map&lt;String, String&gt; redisValue = jedis.hgetAll(redisKey);
	log.info(&quot;redisValue：{}&quot;,redisValue);

	//注意：groovy中字符串用+拼接时，不能换行
	String responseData = &quot;redisKey：&quot; + redisKey + &quot;\r\n&quot; + &quot;redisValue：&quot; + redisValue.toString();
	
SampleResult.setResponseData(responseData, &quot;utf-8&quot;); </stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="redis del" enabled="true">
            <stringProp name="BeanShellSampler.query">import redis.clients.jedis.Jedis;
import me.yangqiuhua.jmeter.protocol.config.RedisElement;

	String redisPoolName = &quot;redis&quot;;
	Jedis jedis = RedisElement.getJedis(redisPoolName);

	String redisKey = &quot;hash&quot;;
	log.info(&quot;redisKey：{}&quot;,redisKey);

	jedis.del(redisKey);

	String responseData = &quot;del redisKey：&quot; + redisKey + &quot; success&quot;;

SampleResult.setResponseData(responseData, &quot;utf-8&quot;); </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="redis expire" enabled="true">
            <stringProp name="BeanShellSampler.query">import redis.clients.jedis.Jedis;
import me.yangqiuhua.jmeter.protocol.config.RedisElement;

	String redisPoolName = &quot;redis&quot;;
	Jedis jedis = RedisElement.getJedis(redisPoolName);

	String redisKey = &quot;string&quot;;
	log.info(&quot;redisKey：{}&quot;,redisKey);
	
	int seconds = 60000;
	log.info(&quot;seconds：{}&quot;,seconds);

	jedis.expire(redisKey, seconds);

	String responseData = &quot;expire redisKey：&quot; + redisKey  + &quot;\r\n&quot; 
	+ &quot;seconds：&quot; + seconds;

SampleResult.setResponseData(responseData, &quot;utf-8&quot;); </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
