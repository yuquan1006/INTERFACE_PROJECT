<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from dao -->
    </parent>
    <groupId>com.ipaylinks.test</groupId>
    <artifactId>mock-server</artifactId>
    <version>1.0.0</version>
    <name>mock-server</name>
    <description>mock-server project for Spring Boot</description>

    <properties>
        <!--dependency property-->
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>

        <mybatis-spring-boot-starter.version>2.0.0</mybatis-spring-boot-starter.version>
        <HikariCP.version>2.6.3</HikariCP.version>
        <mysql-connector-java.version>5.1.46</mysql-connector-java.version>

        <httpclient.version>4.5.13</httpclient.version>
        <fastjson.version>1.2.56</fastjson.version>
        <commons-lang3.version>3.7</commons-lang3.version>
        <jackson-dataformat-xml.version>2.9.8</jackson-dataformat-xml.version>
        <!--<bcprov-jdk16.version>1.46</bcprov-jdk16.version>-->
        <commons-io.version>2.6</commons-io.version>
        <gson.version>2.8.5</gson.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <KoaliiSvs.version>1.0</KoaliiSvs.version>
        <jpos.version>2.1.3</jpos.version>
        <okhttp.version>3.14.2</okhttp.version>
        <logging-interceptor.version>3.14.2</logging-interceptor.version>

        <testng.version>6.9.9</testng.version>
        <reportng.version>1.1.4</reportng.version>
        <guice.version>4.1.0</guice.version>
        <velocity-dep.version>1.4</velocity-dep.version>

        <cfp-spring-boot-starter.version>1.0.0-SNAPSHOT</cfp-spring-boot-starter.version>

        <!--plugin property-->
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <mybatis-generator-maven-plugin.version>1.3.5</mybatis-generator-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.ipaylinks</groupId>
            <artifactId>cfp-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zookeeper-config</artifactId>
        </dependency>

        <!--dao start-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <!--dao end-->

        <!--util start-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.bouncycastle</groupId>-->
            <!--<artifactId>bcprov-jdk16</artifactId>-->
        <!--</dependency>-->
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.bosc</groupId>
            <artifactId>KoaliiSvs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jpos</groupId>
            <artifactId>jpos</artifactId>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
        </dependency>
        <!--util end-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>
        <dependency>
            <groupId>org.uncommons</groupId>
            <artifactId>reportng</artifactId>
        </dependency>
        <!--reportng 依赖guice -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <!--reportng 依赖velocity -->
        <dependency>
            <groupId>velocity</groupId>
            <artifactId>velocity-dep</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.ipaylinks</groupId>
                <artifactId>cfp-spring-boot-starter</artifactId>
                <version>${cfp-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--dao start-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${HikariCP.version}</version>
            </dependency>
            <!--dao end-->

            <!--util start-->
            <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson-dataformat-xml.version}</version>
            </dependency>
            <!--<dependency>-->
                <!--<groupId>org.bouncycastle</groupId>-->
                <!--<artifactId>bcprov-jdk16</artifactId>-->
                <!--<version>${bcprov-jdk16.version}</version>-->
            <!--</dependency>-->
            <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.bosc</groupId>
                <artifactId>KoaliiSvs</artifactId>
                <version>${KoaliiSvs.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.jpos/jpos -->
            <dependency>
                <groupId>org.jpos</groupId>
                <artifactId>jpos</artifactId>
                <version>${jpos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${logging-interceptor.version}</version>
            </dependency>
            <!--util end-->

            <!--test start-->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uncommons</groupId>
                <artifactId>reportng</artifactId>
                <version>${reportng.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.testng</groupId>
                        <artifactId>testng</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--reportng 依赖guice -->
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <!--reportng 依赖velocity -->
            <dependency>
                <groupId>velocity</groupId>
                <artifactId>velocity-dep</artifactId>
                <version>${velocity-dep.version}</version>
            </dependency>
            <!--test end-->
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>mock-server</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--executable : 该项配置是用于生成linux service -->
                    <executable>true</executable>
                    <!--fork : 如果没有该项配置，devtools不会起作用，即应用不会restart -->
                    <fork>true</fork>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <!-- 添加插件 关联testNg.xml -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <configuration>
                    <reportsDirectory>./target/surefire-reports</reportsDirectory>
                    <workingDirectory>target/</workingDirectory>
                    <forkMode>always</forkMode>
                    <skip>false</skip>
                    <testFailureIgnore>true</testFailureIgnore>
                    <argLine>
                        ${surefireArgLine} -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m -Dfile.encoding=UTF-8
                    </argLine>
                    <!-- 添加插件 关联testNG.xml -->
                    <suiteXmlFiles>
                        <suiteXmlFile>release/testNG/testNG.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <!--添加ReportNg的监听器，修改最后的TestNg的报告-->
                    <properties>
                        <property>
                            <name>useDefaultListeners</name>
                            <value>false</value>
                        </property>
                        <property>
                            <name>listener</name>
                            <value>org.uncommons.reportng.HTMLReporter,
                                org.uncommons.reportng.JUnitXMLReporter</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
            <!--jacoco-java代码覆盖率插件-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <configuration>
                    <propertyName>surefireArgLine</propertyName>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <output>file</output>
                            <destFile>./target/jacoco/exec/jacoco.exec</destFile>
                            <append>true</append>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <!--将report这个goal 绑定到 mvn test阶段；即执行mvn test的时候，一定会执行report这个goal-->
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>./target/jacoco/exec/jacoco.exec</dataFile>
                            <outputDirectory>
                                ./target/jacoco/report/${project.name}
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis-generator-maven-plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
